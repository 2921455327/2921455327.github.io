<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://2921455327.github.io</id>
    <title>syz&apos;sinfo</title>
    <updated>2022-03-12T02:50:57.443Z</updated>
    <generator>https://github.com/jpmonette/feed</generator>
    <link rel="alternate" href="https://2921455327.github.io"/>
    <link rel="self" href="https://2921455327.github.io/atom.xml"/>
    <subtitle>温故而知新</subtitle>
    <logo>https://2921455327.github.io/images/avatar.png</logo>
    <icon>https://2921455327.github.io/favicon.ico</icon>
    <rights>All rights reserved 2022, syz&apos;sinfo</rights>
    <entry>
        <title type="html"><![CDATA[正则表达式的用途]]></title>
        <id>https://2921455327.github.io/post/zheng-ze-biao-da-shi-de-yong-tu/</id>
        <link href="https://2921455327.github.io/post/zheng-ze-biao-da-shi-de-yong-tu/">
        </link>
        <updated>2022-03-12T01:32:07.000Z</updated>
        <content type="html"><![CDATA[<h2 id="0判断特定字符串">0.判断特定字符串</h2>
<blockquote>
<p>要检验某一字符串是否符合特定的格式，最方便的方式就是正则表达式:</p>
</blockquote>
<pre><code>&lt;!-- 判断变量是否符合命名规则，v是要进行判断的变量名 --&gt;
const value = /[a-zA-Z\_\$][0-9a-zA-Z\_\$]*/;
value.test(v)
- test
&gt;&gt;&gt; var value=/[a-zA-Z\_\$][0-9a-zA-Z\_\$]*/;
&gt;&gt;&gt; value.test('v')
// true
</code></pre>
<h2 id="1切割字符串">1.切割字符串</h2>
<blockquote>
<p>在读取用户的输入的多个数据时，数据间的分隔符可能是多种多样的，有的人用一个空格，有个人用多个空格，有个人用逗号顿号分号等，而我们读取的是一整个的字符串，如何把这个字符串拆分为一个一个的数据项呢，此时正则就可以上场了</p>
</blockquote>
<pre><code>const reg=/[\s\,\、\。\,]+/
const data=dataInput.split(reg)
- test
&gt;&gt;&gt; var reeg=/[\s\,\、\。\,]+/
&gt;&gt;&gt; dataInput= &quot;A man, a plan, a canal: Panama&quot;
// A man, a plan, a canal: Panama'
&gt;&gt;&gt; dataInput.split(reeg)
// ['A', 'man', 'a', 'plan', 'a', 'canal:', 'Panama']
</code></pre>
<p>这样写，程序的容错性就会明显提升很多</p>
<h2 id="2提取字符串信息">2.提取字符串信息</h2>
<blockquote>
<p>使用exec方法最终得到的是一个数组，里面存放字符串中与正则表达式中匹配的内容，我们可以通过这种方法便捷的提取字符串中的内容</p>
</blockquote>
<pre><code>const re = /^(\d+)(0*)$/;
re.exec('12300')  
const reg = /^(\d+?)(0*)$/;
reg.exec('12300')
- test
&gt;&gt;&gt; const re = /^(\d+)(0*)$/;
&gt;&gt;&gt; re.exec('12300')
// ['12300', '12300', '', index: 0, input: '12300', groups: undefined]
&gt;&gt;&gt; const reg = /^(\d+?)(0*)$/;
&gt;&gt;&gt; reg.exec('12300')
// ['12300', '123', '00', index: 0, input: '12300', groups: undefined]
</code></pre>
<h2 id="3替换字符串">3.替换字符串</h2>
<blockquote>
<p>使用string对象的replace方法可以对字符串中的某一部分进行替换，使用正则字符串后，可以方便的选择字符串中的特定字符，如显示客户信息时要将字符串中的金额数字替换为&quot;*&quot;</p>
</blockquote>
<pre><code>str.replace(/\d+/,&quot;*&quot;);
- test
&gt;&gt;&gt;str = &quot;$1&quot;
// '$1'
&gt;&gt;&gt;str.replace(/\d+/g,&quot;*&quot;)
// '$*'
</code></pre>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[HTML语法]]></title>
        <id>https://2921455327.github.io/post/html-yu-fa/</id>
        <link href="https://2921455327.github.io/post/html-yu-fa/">
        </link>
        <updated>2022-02-10T07:14:59.000Z</updated>
        <content type="html"><![CDATA[<p>标签和属性不区分大小写，推荐小写<br>
空标签可以不闭合，比如input，meta<br>
属性值推荐用双引号包裹<br>
某些属性值可以省略，比如required，readonly</p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[前端是什么？]]></title>
        <id>https://2921455327.github.io/post/qian-duan-shi-shi-me/</id>
        <link href="https://2921455327.github.io/post/qian-duan-shi-shi-me/">
        </link>
        <updated>2022-02-10T06:54:28.000Z</updated>
        <content type="html"><![CDATA[<p>1.解决GUI（图形界面下的）人机问题<br>
2.跨终端<br>
pc/移动浏览器<br>
客户端/小程序<br>
VR/AR等<br>
3.Web技术栈<br>
🚩前端工程师是使用Web技术栈解决多端图形用户界面交互问题的工程师。</p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[Es6：set方法]]></title>
        <id>https://2921455327.github.io/post/es6set-fang-fa/</id>
        <link href="https://2921455327.github.io/post/es6set-fang-fa/">
        </link>
        <updated>2022-02-10T02:21:43.000Z</updated>
        <content type="html"><![CDATA[<p>1.set是一种数据结构，可以认为是数组；<br>
2.set的四种操作方法：<br>
a.add(value),用于向数组中添加元素，返回set结构本身；<br>
b.delete(value),删除元素，返回一个bool值，表示是否删除成功；<br>
c.has(value),返回一个bool值表示set中是否含有本元素；<br>
d.clear(),清除所有的set成员，没有返回值；<br>
3.set里面添加的对象即使相同也是不相等的，例如：set.add({});  set.add({});   可以同时存在；<br>
4.Set.prototype.constructor，构造函数，默认是set函数；<br>
5.Set.prototype.size,返回set实例的成员总数；<br>
6.Array.from方法可以将set结构转化为数组；</p>
<pre><code class="language-JavaScript">const set = new Set([1,2,3,4,5,6,23,13,1,1,1]);
[...set]
console.log(set);
//set内含元素的个数
console.log(set.size);
console.log([...set]);
//set添加元素
set.add(11112);
//删除元素
set.delete(23);
//是否存在某个元素
set.has(13);
console.log(set.has(13));
//清除所有成员
set.clear();
console.log(set);
//set的四个遍历方法
let set1 = new Set(['1','2','3']);
for(let key of set1.keys()){
    console.log(key);
}
for(let value of set1.values()){
    console.log(value);
}
for(let item of set1.entries()){
    console.log(item);
}
//for...of....
let myArr = new Set([1,2,3,4,5]);
for(let x of myArr){
    console.log(x);
}
</code></pre>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[Hello Gridea]]></title>
        <id>https://2921455327.github.io/post/hello-gridea/</id>
        <link href="https://2921455327.github.io/post/hello-gridea/">
        </link>
        <updated>2018-12-11T16:00:00.000Z</updated>
        <summary type="html"><![CDATA[<p>👏  欢迎使用 <strong>Gridea</strong> ！<br>
✍️  <strong>Gridea</strong> 一个静态博客写作客户端。你可以用它来记录你的生活、心情、知识、笔记、创意... ...</p>
]]></summary>
        <content type="html"><![CDATA[<p>👏  欢迎使用 <strong>Gridea</strong> ！<br>
✍️  <strong>Gridea</strong> 一个静态博客写作客户端。你可以用它来记录你的生活、心情、知识、笔记、创意... ...</p>
<!-- more -->
<p><a href="https://github.com/getgridea/gridea">Github</a><br>
<a href="https://gridea.dev/">Gridea 主页</a><br>
<a href="http://fehey.com/">示例网站</a></p>
<h2 id="特性">特性👇</h2>
<p>📝  你可以使用最酷的 <strong>Markdown</strong> 语法，进行快速创作</p>
<p>🌉  你可以给文章配上精美的封面图和在文章任意位置插入图片</p>
<p>🏷️  你可以对文章进行标签分组</p>
<p>📋  你可以自定义菜单，甚至可以创建外部链接菜单</p>
<p>💻  你可以在 <strong>Windows</strong>，<strong>MacOS</strong> 或 <strong>Linux</strong> 设备上使用此客户端</p>
<p>🌎  你可以使用 <strong>𝖦𝗂𝗍𝗁𝗎𝖻 𝖯𝖺𝗀𝖾𝗌</strong> 或 <strong>Coding Pages</strong> 向世界展示，未来将支持更多平台</p>
<p>💬  你可以进行简单的配置，接入 <a href="https://github.com/gitalk/gitalk">Gitalk</a> 或 <a href="https://github.com/SukkaW/DisqusJS">DisqusJS</a> 评论系统</p>
<p>🇬🇧  你可以使用<strong>中文简体</strong>或<strong>英语</strong></p>
<p>🌁  你可以任意使用应用内默认主题或任意第三方主题，强大的主题自定义能力</p>
<p>🖥  你可以自定义源文件夹，利用 OneDrive、百度网盘、iCloud、Dropbox 等进行多设备同步</p>
<p>🌱 当然 <strong>Gridea</strong> 还很年轻，有很多不足，但请相信，它会不停向前 🏃</p>
<p>未来，它一定会成为你离不开的伙伴</p>
<p>尽情发挥你的才华吧！</p>
<p>😘 Enjoy~</p>
]]></content>
    </entry>
</feed>